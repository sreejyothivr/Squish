# Sample configuration file for customizing the automation of Web Applications.
# You may modify this file, but it is recommended that you copy it
# instead to $HOME/.squish/ver1 (on Linux and MacOSX) or %APPDATA%\froglogic\squish\ver1 (on Window)
#
# That way, you can keep this file as a reference of the default values.
#
[General]

# Enables Ctrl+Alt+Click to show a popup with Squish-related information about the clicked object
EnableObjectInfoOverlay=false

# Filter out NODE objects from the children of objects in Squish and also from the DOM functions like HTML_Object.firstChild etc.
DynamicTextNodeFilter=true

# Enable extra debug output when using the Proxy Approach
ProxyDebugOutput=false

# The host and port on which the Squish Web Proxy listens for the control connection to Squish
ProxyConnectAddress="localhost:8001"

# The host and port on which the Squish Web Proxy listens for connections from the web browser
ProxyListenAddress="localhost:8000"

# Enables automatically starting the web browser when starting the WebHook
ProxyStartBrowser=true

# Enables automatically starting the Squish Web Proxy when starting the WebHook
ProxyImplicitStart=true

# Enable hooking into additional web browser windows created by a web page, currently only works for IE and Safari
# See also http://kb.froglogic.com/display/KB/Article+-+Hooking+New+Browser+Windows
# This will only work as described if 'ImprovedTabAndWindowSupport' is set to false below
HookNewWindows=false

# Generate verbose logging showing all executed JavaScript statements
DebugJavaScriptExecution=false

# Should node names in XPath expressions be matched case-insensitive or not
# This affects the behaviour of evaluateXPath(), setting true here allows the use of
# evaluateXPath('./div/form[@id='foo']/input') instead of having to upper case the node names:
# evaluateXPath('./DIV/FORM[@id='foo']/INPUT')
CaseInsensitiveXPathNodeNameMatching=true

# Enables backwards-compatible behaviour for the 'visible' property of HTML_Object
# and several subtypes. In older versions of Squish this property was mapped to a
# 'visible' attribute of the HTML element which is not available for most Web
# Applications. In Squish 5.1 the meaning of the property was changed and now indicates
# whether the HTML element is being shown on screen or not, based on the data provided
# by CSS. Changing this setting to 'true' restores the pre-5.1 behaviour
BackwardsCompatibleVisiblePropertyForHTML_Object=false

# Determines how long Squish waits for IE's ready-state to be true when loading a URL
# This can be increased in case loading a URL via loadUrl() takes exceptionally
# long so that Squish is not able to hook/record/spy IE at all.
InternetExplorerReadyStateTimeout=5000

# Starts Firefox with the -console argument on Windows which creates a separate
# console window where log output from the Squish Firefox Extension can be seen
# Useful for debugging problems with the Firefox extension
OpenFirefoxWithConsole=false

# Enable support for recognizing tabs and windows as distinct objects
# and usage of the corresponding API functions 'activateBrowserTab', 'currentBrowserTab', 'browserTabs'
# When this is enabled the setting 'HookNewWindows' has no effect anymore.
ImprovedTabAndWindowSupport=true

# This setting influences the meaning of the NAMINGSCHEME=HIERARCHICAL setting in the suite.conf
# of Squish for Web testsuites. If this setting is set to true Squish for Web will restore the old
# behavior of generating names based on a single property value from the object, most of the 'id'.
# The new default value 'false' ensures that the naming scheme setting keeps its intended meaning and
# Squish for Web generates real hierarchical names. This setting has no effect if the suite.conf
# uses NAMINGSCHEME=MULTIPROP.
SupportSinglePropertyNaming=false

# This setting influences the behavior when a context name is used in object names or with
# the varios functions for setting/finding a context.
# If this setting is set to true a context name that cannot be found will cause an exception
# to be thrown in the script if its used with functions such as setContext, setFrameContext or
# waitForContextExists. If a non-existing context name is used as part of an object name the
# object lookup will fail.
# If the setting is set to false the context name may be ignored if no matching context can be
# found, functions such as setContext, setFrameContext or waitForContextExists will return false
# if they cannot find the context and true otherwise.
ThrowErrorOnUnknownContextNames=true

# Can be enabled to enable certain debugging/logging options when starting the browser
# This should only be set to true when a froglogic employee requested you to do so.
EnableBrowserDebugging=false

# This should be set to the absolute path of the chromedriver helper executable or kept at the value 'chromedriver'
# any other value will be ignored
# Note: On Windows make sure to use 2 backslashes '\\' as path separator
# (as in C:\\chromedriver.exe), since a single backslash is a special character
# in this file
ChromeDriverForChromiumBasedApps="chromedriver"

# This setting allows easy configuration of whether the id property should be included when
# Squish generates a name.
IncludeIdPropertyInGeneratedNames=true

# This setting modifies the way events like mouse clicks or text input are transferred
# from the browser to the webhook helper process. Setting this to 'true' avoids usage
# of a HTTP server for transferring that data and thus can help when the Javascript
# injected by Squish is not allowed to connect to a locally running HTTP server. One
# example of this is Visual Studio Code, which prevents such connections
# Note: This setting currently only has an effect when using a Chromium-based Application
# with the corresponding browser type selected for Squish for Web
UseSessionStorageForEvents=false
